{"ast":null,"code":"var _jsxFileName = \"/Users/mel-jadi/Desktop/open-react-template-master/src/components/layout/Header.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nconst defaultProps = {\n  navPosition: '',\n  hideNav: false,\n  hideSignin: false,\n  bottomOuterDivider: false,\n  bottomDivider: false\n};\n\nconst Header = ({\n  className,\n  navPosition,\n  hideNav,\n  hideSignin,\n  bottomOuterDivider,\n  bottomDivider,\n  ...props\n}) => {\n  const [isActive, setIsactive] = useState(false);\n  const nav = useRef(null);\n  const hamburger = useRef(null);\n  useEffect(() => {\n    isActive && openMenu();\n    document.addEventListener('keydown', keyPress);\n    document.addEventListener('click', clickOutside);\n    return () => {\n      document.removeEventListener('keydown', keyPress);\n      document.removeEventListener('click', clickOutside);\n      closeMenu();\n    };\n  });\n\n  const openMenu = () => {\n    document.body.classList.add('off-nav-is-active');\n    nav.current.style.maxHeight = nav.current.scrollHeight + 'px';\n    setIsactive(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/mel-jadi/Desktop/open-react-template-master/src/components/layout/Header.js"],"names":["React","useState","useRef","useEffect","PropTypes","classNames","defaultProps","navPosition","hideNav","hideSignin","bottomOuterDivider","bottomDivider","Header","className","props","isActive","setIsactive","nav","hamburger","openMenu","document","addEventListener","keyPress","clickOutside","removeEventListener","closeMenu","body","classList","add","current","style","maxHeight","scrollHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,kBAAkB,EAAE,KAJD;AAKnBC,EAAAA,aAAa,EAAE;AALI,CAArB;;AAQA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,SADc;AAEdN,EAAAA,WAFc;AAGdC,EAAAA,OAHc;AAIdC,EAAAA,UAJc;AAKdC,EAAAA,kBALc;AAMdC,EAAAA,aANc;AAOd,KAAGG;AAPW,CAAD,KAQT;AAEJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMgB,GAAG,GAAGf,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMgB,SAAS,GAAGhB,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,IAAII,QAAQ,EAApB;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,QAArC;AACAF,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCE,YAAnC;AACA,WAAO,MAAM;AACXH,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwCF,QAAxC;AACAF,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsCD,YAAtC;AACAE,MAAAA,SAAS;AACV,KAJD;AAKD,GATQ,CAAT;;AAWA,QAAMN,QAAQ,GAAG,MAAM;AACrBC,IAAAA,QAAQ,CAACM,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,mBAA5B;AACAX,IAAAA,GAAG,CAACY,OAAJ,CAAYC,KAAZ,CAAkBC,SAAlB,GAA8Bd,GAAG,CAACY,OAAJ,CAAYG,YAAZ,GAA2B,IAAzD;AACAhB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAJD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CA7CD;;AAgDA,eAAeJ,MAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n\n\nconst defaultProps = {\n  navPosition: '',\n  hideNav: false,\n  hideSignin: false,\n  bottomOuterDivider: false,\n  bottomDivider: false\n}\n\nconst Header = ({\n  className,\n  navPosition,\n  hideNav,\n  hideSignin,\n  bottomOuterDivider,\n  bottomDivider,\n  ...props\n}) => {\n\n  const [isActive, setIsactive] = useState(false);\n\n  const nav = useRef(null);\n  const hamburger = useRef(null);\n\n  useEffect(() => {\n    isActive && openMenu();\n    document.addEventListener('keydown', keyPress);\n    document.addEventListener('click', clickOutside);\n    return () => {\n      document.removeEventListener('keydown', keyPress);\n      document.removeEventListener('click', clickOutside);\n      closeMenu();\n    };\n  });  \n\n  const openMenu = () => {\n    document.body.classList.add('off-nav-is-active');\n    nav.current.style.maxHeight = nav.current.scrollHeight + 'px';\n    setIsactive(true);\n  }\n\n  \n\n \n\n  \n\n  \n\n  return (\n    <header>\n      \n    </header>\n  );\n}\n\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}